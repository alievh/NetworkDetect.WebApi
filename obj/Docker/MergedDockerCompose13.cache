name: dockercompose12407305393900429413
services:
  networkdetect.api:
    build:
      context: D:\Projects\MUSTAnalytics\NetworkDetect.WebApi
      dockerfile: NetworkDetect.Api/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
        LAUNCHING_FROM_VS: "true"
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: NetworkDetect.Api
      target: base
    container_name: network-detect-app
    depends_on:
      networkdetectdb:
        condition: service_started
    entrypoint:
    - dotnet
    - --roll-forward
    - Major
    - /VSTools/DistrolessHelper/DistrolessHelper.dll
    - --wait
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DB_HOST: networkdetectdb
      DB_NAME: NetworkDetectApp
      DB_SA_PASSWORD: P@55w0rd!
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages
    image: networkdetectapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages
        --additionalProbingPath /.nuget/fallbackpackages  "/app/bin/Debug/net8.0/NetworkDetect.Api.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: dotnet --roll-forward Major
        /VSTools/DistrolessHelper/DistrolessHelper.dll --stop dotnet
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      networkdetectapp: null
    ports:
    - mode: ingress
      target: 8080
      protocol: tcp
    - mode: ingress
      target: 8080
      published: "8001"
      protocol: tcp
    - mode: ingress
      target: 8081
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Program Files\dotnet\sdk\NuGetFallbackFolder
      target: /.nuget/fallbackpackages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\hsyna\.nuget\packages
      target: /.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
      target: /HotReloadAgent
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\linux-x64\net8.0
      target: /VSTools
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: D:\Projects\MUSTAnalytics\NetworkDetect.WebApi\NetworkDetect.Api
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: D:/Projects/MUSTAnalytics/NetworkDetect.WebApi/NetworkDetect.Api/Images
      target: /app/images
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\hsyna\AppData\Roaming\ASP.NET\Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\hsyna\AppData\Roaming\Microsoft\UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\hsyna\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\hsyna\AppData\Roaming\ASP.NET\Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\hsyna\AppData\Roaming\Microsoft\UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: D:\Projects\MUSTAnalytics\NetworkDetect.WebApi
      target: /src
      bind:
        create_host_path: true
  networkdetectdb:
    container_name: network-detect-db
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: P@55w0rd!
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      networkdetectapp: null
    ports:
    - mode: ingress
      target: 1433
      published: "1433"
      protocol: tcp
networks:
  networkdetectapp:
    name: dockercompose12407305393900429413_networkdetectapp